# Generated by Django 2.2.12 on 2022-06-02 15:09

from django.db import migrations
from django.db.models import F, OuterRef, Subquery


def scriptresult_fix_script_link(apps, schema_editor):
    """Link ScriptResult to Script with matching name, if any."""
    ScriptResult = apps.get_model("metadataserver", "ScriptResult")
    Script = apps.get_model("metadataserver", "Script")
    (
        ScriptResult.objects.filter(script__isnull=True)
        .annotate(
            new_script_id=Subquery(
                Script.objects.filter(name=OuterRef("script_name")).values(
                    "id"
                )[:1]
            )
        )
        .update(script_id=F("new_script_id"))
    )


RUN_MACHINE_RESOURCES = "20-maas-03-machine-resources"
COMMISSIONING_OUTPUT_NAME = "50-maas-01-commissioning"


def add_run_machine_resources_scriptresult(apps, schema_editor):
    """Create missing script results for machine-resources output.

    This duplicates the output from the commissioning output when the former
    script is not present (for LXD VM hosts).
    """
    ScriptResult = apps.get_model("metadataserver", "ScriptResult")
    Script = apps.get_model("metadataserver", "Script")
    run_resources_script = (
        Script.objects.prefetch_related("script")
        .filter(name=RUN_MACHINE_RESOURCES)
        .first()
    )
    if not run_resources_script:
        return

    script_results = ScriptResult.objects.filter(
        script_name=COMMISSIONING_OUTPUT_NAME
    ).exclude(script_set__scriptresult__script_name=RUN_MACHINE_RESOURCES)
    for script_result in script_results:
        # create a new result with the same content, pointing to the right
        # script
        script_result.id = None
        script_result.script_name = RUN_MACHINE_RESOURCES
        script_result.script = run_resources_script
        script_result.script_version = run_resources_script.script
        script_result.save(force_insert=True)


class Migration(migrations.Migration):

    dependencies = [
        ("metadataserver", "0029_scriptset_tags_cleanup"),
    ]

    operations = [
        migrations.RunPython(scriptresult_fix_script_link),
        migrations.RunPython(add_run_machine_resources_scriptresult),
    ]
